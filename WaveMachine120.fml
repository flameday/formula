//------------------------------------------------------------------------
// 简称:WaveMachine120
// 名称:计算机数浪120
// 类别: 交易指令
// 类型: 用户应用
//------------------------------------------------------------------------
//------------------------------------------------------------------------
// 简称:WaveMachine
// 名称:计算机数浪
// 类别: 交易指令
// 类型: 用户应用
//------------------------------------------------------------------------
Params         
		Integer LIMIT_COUNT(3);
GlobalVars
Vars
		Bool flag(False);
		Integer minCount(0);
		Integer maxCount(0);
		NumericSeries avg10;
		NumericSeries lowArr;
		NumericSeries highArr;
		NumericSeries macd240Arr;
		Integer offset;
		Integer i;
		
		Integer lastMin(-1);
		Integer lastMax(-1);
		Integer oldMin;
		Integer oldMax;
		Integer index0;
		Integer index1;
		Integer m;
		Integer x;
		Integer x1;
		Integer x2;
		Numeric y1;
		Numeric y2;
		Numeric y;
		Numeric slope;
		Numeric diff;
		Numeric yMax;
		Numeric yMin;
		Integer startX;
		Numeric xMean;
		Numeric yMean;
		Numeric xSum;
		Numeric ySum;
		Numeric k;
		Numeric b;
		Integer xLeft;
		Integer xRight;
		Numeric yLeft;
		Numeric yRight;
		Numeric A_Sum;
		Numeric B_Sum;
		Numeric C_Sum;
		Numeric D_Sum;
		Numeric x_i;
		Numeric y_i;
		Integer currentIndex;
		NumericArray bottomArr;
		NumericArray topArr;
		
		Integer highCntFromLastMin(0);
		Integer lowCntFromLastMin(0);
		
		Integer highCntFromLastMax(0);
		Integer lowCntFromLastMax(0);
		Numeric tmp;		
Begin
		// wave数浪
		//commentary("start="+text(currenttime));
		avg10  = AverageFC(Close, 120);
		lowArr = AverageFC(Low, 1);
		highArr= AverageFC(High, 1);
		if (CurrentBar == 0) {
			SetGlobalVar(0, -1);
			SetGlobalVar(1, -1);
			
			SetGlobalVar(49, -1);
			SetGlobalVar(39, -1);
		}
		lastMin = GetGlobalVar(0);
		lastMax = GetGlobalVar(1);
		oldMin = lastMin;
		oldMax = lastMax;
		
		//UnPlotPartLine("tail", highArr[1]);
		//UnPlotPartLine("tail", lowArr[1]);
		
		index0 = GetGlobalVar(49);//表示待写入值
		index1 = GetGlobalVar(39);//表示待写入值
		
		//设置第一个Dot
		if (lastMax == -1) {
			maxCount = 0;
			for i=0 to CurrentBar {
				if (lowArr[i] > avg10[i]){
					maxCount += 1;
				}
				//绘制
				if (maxCount >= LIMIT_COUNT && lastMax == -1) {
					lastMax = i;
					SetGlobalVar(1, i);
					break;
				}
			}
		}
		//设置第一个Dot
		if (lastMin == -1) {
			minCount = 0;
			for i=0 to CurrentBar {
				if (highArr[i] < avg10[i]) {
					minCount += 1;
				}
				//绘制
				if (minCount >= LIMIT_COUNT && lastMin == -1) {
					lastMin = i;
					SetGlobalVar(0, i);
					break;
				}
			}
		}
		if (lastMax == -1 && lastMin == -1) {
			//
		} else {
			if (lastMax == -1) {
				lastMax = 0;
			}
			if (lastMin == -1) {
				lastMin = 0;
			}
			for offset = 0 to CurrentBar - lastMax {
				if (lowArr[offset] > avg10[offset]){
					highCntFromLastMax += 1;
				} 
				if (highArr[offset] < avg10[offset]) {
					lowCntFromLastMax += 1;
				}
			}
			for offset = 0 to CurrentBar - lastMin{
				if (lowArr[offset] > avg10[offset]){
					highCntFromLastMin += 1;
				}
				if (highArr[offset] < avg10[offset]) {
					lowCntFromLastMin += 1;
				}
			}
			//判断1
			if (lastMin < lastMax) {
				if (highCntFromLastMin >= LIMIT_COUNT) {
					//高度比较
					if (highArr[CurrentBar - lastMax] > highArr[0]){
						//keep old
					} else{
						//更高
						lastMax = CurrentBar;
						SetGlobalVar(1, CurrentBar);
					}
				}
				if (lowCntFromLastMax >= LIMIT_COUNT) {
					//保存上一个lastMin
					index0 = (index0 +1)%9;
					SetGlobalVar(40 + index0, lastMin);
					SetGlobalVar(49, index0);
					
					lastMin = CurrentBar;
					SetGlobalVar(0, CurrentBar);
				}
			} else if(lastMin > lastMax) {
				if (lowCntFromLastMax >= LIMIT_COUNT) {
					//高度比较
					if (lowArr[CurrentBar - lastMin] < lowArr[0]) {
						//keep
					} else {
						//更低
						lastMin = CurrentBar;
						SetGlobalVar(0, CurrentBar);
					}
				}
				if (highCntFromLastMin >= LIMIT_COUNT) {
					index1 = (index1 +1)%9;
					SetGlobalVar(30+index1, lastMax);
					SetGlobalVar(39, index1);
					//保存上一个lastMax
					lastMax = CurrentBar;
					SetGlobalVar(1, CurrentBar);
				}
			}
		}
		//Plotnumeric("lowArr[CurrentBar-lastMin]",lowArr[CurrentBar - lastMin]);
		//Plotnumeric("lowArr[CurrentBar]",lowArr[0]);
		//Plotnumeric("avg10[CurrentBar]",avg10[0]);
		
		// 打印记录的索引值
		//Plotnumeric("oldMax",oldMax);
		//Plotnumeric("oldMin",oldMin);
		//SetGlobalLoop0(CurrentBar);
		//PlotNumeric("oldMin", tmp);
		
		if (oldMin > oldMax &&lastMax > oldMax) {
			PartLine("minMax2", CurrentBar-oldMax, highArr[CurrentBar-oldMax], CurrentBar-oldMin, lowArr[CurrentBar-oldMin]);
		}
		if (oldMax >oldMin && lastMin > oldMin){
			PartLine("minMax2", CurrentBar-oldMin, lowArr[CurrentBar-oldMin], CurrentBar-oldMax, highArr[CurrentBar-oldMax]);
		}
		
		//we has lastMax/lastMin
		PlotNumeric("CurrentBar", CurrentBar);
		PlotNumeric("lastMax", lastMax);
		PlotNumeric("lastMin", lastMin);
		PlotNumeric("oldMax", oldMax);
		PlotNumeric("oldMin", oldMin);
		//PartLine("tail",CurrentBar-oldMax, highArr[CurrentBar-oldMax], CurrentBar-lastMin, lowArr[CurrentBar-lastMin]);	
		
		if (lastMax == oldMax && lastMin == oldMin ) {
			if ( lastMin > lastMax ) {
				PartLine("tail",CurrentBar-oldMax, highArr[CurrentBar-oldMax], CurrentBar-lastMin, lowArr[CurrentBar-lastMin]);	
			} else {
				PartLine("tail", CurrentBar-oldMin, lowArr[CurrentBar-oldMin], CurrentBar-lastMax, highArr[CurrentBar-lastMax]);
			}
		}
End
